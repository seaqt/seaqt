#pragma once
#ifndef SEAQT_QTWIDGETS_GEN_QTABLEVIEW_H
#define SEAQT_QTWIDGETS_GEN_QTABLEVIEW_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../libseaqt/libseaqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAbstractItemDelegate;
class QAbstractItemModel;
class QAbstractItemView;
class QAbstractScrollArea;
class QActionEvent;
class QChildEvent;
class QCloseEvent;
class QContextMenuEvent;
class QDragEnterEvent;
class QDragLeaveEvent;
class QDragMoveEvent;
class QDropEvent;
class QEnterEvent;
class QEvent;
class QFocusEvent;
class QFrame;
class QHeaderView;
class QHideEvent;
class QInputMethodEvent;
class QItemSelection;
class QItemSelectionModel;
class QKeyEvent;
class QMargins;
class QMetaMethod;
class QMetaObject;
class QModelIndex;
class QMouseEvent;
class QMoveEvent;
class QObject;
class QPaintDevice;
class QPaintEngine;
class QPaintEvent;
class QPainter;
class QPoint;
class QRect;
class QRegion;
class QResizeEvent;
class QShowEvent;
class QSize;
class QStyleOptionFrame;
class QStyleOptionViewItem;
class QTableView;
class QTabletEvent;
class QTimerEvent;
class QVariant;
class QWheelEvent;
class QWidget;
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHeaderView QHeaderView;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTableView QTableView;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

struct QTableView_VTable {
	void (*destructor)(struct QTableView_VTable* vtbl, QTableView* self);
	QMetaObject* (*metaObject)(struct QTableView_VTable* vtbl, const QTableView* self);
	void* (*metacast)(struct QTableView_VTable* vtbl, QTableView* self, const char* param1);
	int (*metacall)(struct QTableView_VTable* vtbl, QTableView* self, int param1, int param2, void** param3);
	void (*setModel)(struct QTableView_VTable* vtbl, QTableView* self, QAbstractItemModel* model);
	void (*setRootIndex)(struct QTableView_VTable* vtbl, QTableView* self, QModelIndex* index);
	void (*setSelectionModel)(struct QTableView_VTable* vtbl, QTableView* self, QItemSelectionModel* selectionModel);
	void (*doItemsLayout)(struct QTableView_VTable* vtbl, QTableView* self);
	QRect* (*visualRect)(struct QTableView_VTable* vtbl, const QTableView* self, QModelIndex* index);
	void (*scrollTo)(struct QTableView_VTable* vtbl, QTableView* self, QModelIndex* index, int hint);
	QModelIndex* (*indexAt)(struct QTableView_VTable* vtbl, const QTableView* self, QPoint* p);
	void (*scrollContentsBy)(struct QTableView_VTable* vtbl, QTableView* self, int dx, int dy);
	void (*initViewItemOption)(struct QTableView_VTable* vtbl, const QTableView* self, QStyleOptionViewItem* option);
	void (*paintEvent)(struct QTableView_VTable* vtbl, QTableView* self, QPaintEvent* e);
	void (*timerEvent)(struct QTableView_VTable* vtbl, QTableView* self, QTimerEvent* event);
	int (*horizontalOffset)(struct QTableView_VTable* vtbl, const QTableView* self);
	int (*verticalOffset)(struct QTableView_VTable* vtbl, const QTableView* self);
	QModelIndex* (*moveCursor)(struct QTableView_VTable* vtbl, QTableView* self, int cursorAction, int modifiers);
	void (*setSelection)(struct QTableView_VTable* vtbl, QTableView* self, QRect* rect, int command);
	QRegion* (*visualRegionForSelection)(struct QTableView_VTable* vtbl, const QTableView* self, QItemSelection* selection);
	struct miqt_array /* of QModelIndex* */  (*selectedIndexes)(struct QTableView_VTable* vtbl, const QTableView* self);
	void (*updateGeometries)(struct QTableView_VTable* vtbl, QTableView* self);
	QSize* (*viewportSizeHint)(struct QTableView_VTable* vtbl, const QTableView* self);
	int (*sizeHintForRow)(struct QTableView_VTable* vtbl, const QTableView* self, int row);
	int (*sizeHintForColumn)(struct QTableView_VTable* vtbl, const QTableView* self, int column);
	void (*verticalScrollbarAction)(struct QTableView_VTable* vtbl, QTableView* self, int action);
	void (*horizontalScrollbarAction)(struct QTableView_VTable* vtbl, QTableView* self, int action);
	bool (*isIndexHidden)(struct QTableView_VTable* vtbl, const QTableView* self, QModelIndex* index);
	void (*selectionChanged)(struct QTableView_VTable* vtbl, QTableView* self, QItemSelection* selected, QItemSelection* deselected);
	void (*currentChanged)(struct QTableView_VTable* vtbl, QTableView* self, QModelIndex* current, QModelIndex* previous);
	void (*keyboardSearch)(struct QTableView_VTable* vtbl, QTableView* self, struct miqt_string search);
	QAbstractItemDelegate* (*itemDelegateForIndex)(struct QTableView_VTable* vtbl, const QTableView* self, QModelIndex* index);
	QVariant* (*inputMethodQuery)(struct QTableView_VTable* vtbl, const QTableView* self, int query);
	void (*reset)(struct QTableView_VTable* vtbl, QTableView* self);
	void (*selectAll)(struct QTableView_VTable* vtbl, QTableView* self);
	void (*dataChanged)(struct QTableView_VTable* vtbl, QTableView* self, QModelIndex* topLeft, QModelIndex* bottomRight, struct miqt_array /* of int */  roles);
	void (*rowsInserted)(struct QTableView_VTable* vtbl, QTableView* self, QModelIndex* parent, int start, int end);
	void (*rowsAboutToBeRemoved)(struct QTableView_VTable* vtbl, QTableView* self, QModelIndex* parent, int start, int end);
	void (*updateEditorData)(struct QTableView_VTable* vtbl, QTableView* self);
	void (*updateEditorGeometries)(struct QTableView_VTable* vtbl, QTableView* self);
	void (*verticalScrollbarValueChanged)(struct QTableView_VTable* vtbl, QTableView* self, int value);
	void (*horizontalScrollbarValueChanged)(struct QTableView_VTable* vtbl, QTableView* self, int value);
	void (*closeEditor)(struct QTableView_VTable* vtbl, QTableView* self, QWidget* editor, int hint);
	void (*commitData)(struct QTableView_VTable* vtbl, QTableView* self, QWidget* editor);
	void (*editorDestroyed)(struct QTableView_VTable* vtbl, QTableView* self, QObject* editor);
	bool (*edit2)(struct QTableView_VTable* vtbl, QTableView* self, QModelIndex* index, int trigger, QEvent* event);
	int (*selectionCommand)(struct QTableView_VTable* vtbl, const QTableView* self, QModelIndex* index, QEvent* event);
	void (*startDrag)(struct QTableView_VTable* vtbl, QTableView* self, int supportedActions);
	bool (*focusNextPrevChild)(struct QTableView_VTable* vtbl, QTableView* self, bool next);
	bool (*event)(struct QTableView_VTable* vtbl, QTableView* self, QEvent* event);
	bool (*viewportEvent)(struct QTableView_VTable* vtbl, QTableView* self, QEvent* event);
	void (*mousePressEvent)(struct QTableView_VTable* vtbl, QTableView* self, QMouseEvent* event);
	void (*mouseMoveEvent)(struct QTableView_VTable* vtbl, QTableView* self, QMouseEvent* event);
	void (*mouseReleaseEvent)(struct QTableView_VTable* vtbl, QTableView* self, QMouseEvent* event);
	void (*mouseDoubleClickEvent)(struct QTableView_VTable* vtbl, QTableView* self, QMouseEvent* event);
	void (*dragEnterEvent)(struct QTableView_VTable* vtbl, QTableView* self, QDragEnterEvent* event);
	void (*dragMoveEvent)(struct QTableView_VTable* vtbl, QTableView* self, QDragMoveEvent* event);
	void (*dragLeaveEvent)(struct QTableView_VTable* vtbl, QTableView* self, QDragLeaveEvent* event);
	void (*dropEvent)(struct QTableView_VTable* vtbl, QTableView* self, QDropEvent* event);
	void (*focusInEvent)(struct QTableView_VTable* vtbl, QTableView* self, QFocusEvent* event);
	void (*focusOutEvent)(struct QTableView_VTable* vtbl, QTableView* self, QFocusEvent* event);
	void (*keyPressEvent)(struct QTableView_VTable* vtbl, QTableView* self, QKeyEvent* event);
	void (*resizeEvent)(struct QTableView_VTable* vtbl, QTableView* self, QResizeEvent* event);
	void (*inputMethodEvent)(struct QTableView_VTable* vtbl, QTableView* self, QInputMethodEvent* event);
	bool (*eventFilter)(struct QTableView_VTable* vtbl, QTableView* self, QObject* object, QEvent* event);
	QSize* (*minimumSizeHint)(struct QTableView_VTable* vtbl, const QTableView* self);
	QSize* (*sizeHint)(struct QTableView_VTable* vtbl, const QTableView* self);
	void (*setupViewport)(struct QTableView_VTable* vtbl, QTableView* self, QWidget* viewport);
	void (*wheelEvent)(struct QTableView_VTable* vtbl, QTableView* self, QWheelEvent* param1);
	void (*contextMenuEvent)(struct QTableView_VTable* vtbl, QTableView* self, QContextMenuEvent* param1);
	void (*changeEvent)(struct QTableView_VTable* vtbl, QTableView* self, QEvent* param1);
	void (*initStyleOption)(struct QTableView_VTable* vtbl, const QTableView* self, QStyleOptionFrame* option);
	int (*devType)(struct QTableView_VTable* vtbl, const QTableView* self);
	void (*setVisible)(struct QTableView_VTable* vtbl, QTableView* self, bool visible);
	int (*heightForWidth)(struct QTableView_VTable* vtbl, const QTableView* self, int param1);
	bool (*hasHeightForWidth)(struct QTableView_VTable* vtbl, const QTableView* self);
	QPaintEngine* (*paintEngine)(struct QTableView_VTable* vtbl, const QTableView* self);
	void (*keyReleaseEvent)(struct QTableView_VTable* vtbl, QTableView* self, QKeyEvent* event);
	void (*enterEvent)(struct QTableView_VTable* vtbl, QTableView* self, QEnterEvent* event);
	void (*leaveEvent)(struct QTableView_VTable* vtbl, QTableView* self, QEvent* event);
	void (*moveEvent)(struct QTableView_VTable* vtbl, QTableView* self, QMoveEvent* event);
	void (*closeEvent)(struct QTableView_VTable* vtbl, QTableView* self, QCloseEvent* event);
	void (*tabletEvent)(struct QTableView_VTable* vtbl, QTableView* self, QTabletEvent* event);
	void (*actionEvent)(struct QTableView_VTable* vtbl, QTableView* self, QActionEvent* event);
	void (*showEvent)(struct QTableView_VTable* vtbl, QTableView* self, QShowEvent* event);
	void (*hideEvent)(struct QTableView_VTable* vtbl, QTableView* self, QHideEvent* event);
	bool (*nativeEvent)(struct QTableView_VTable* vtbl, QTableView* self, struct miqt_string eventType, void* message, intptr_t* result);
	int (*metric)(struct QTableView_VTable* vtbl, const QTableView* self, int param1);
	void (*initPainter)(struct QTableView_VTable* vtbl, const QTableView* self, QPainter* painter);
	QPaintDevice* (*redirected)(struct QTableView_VTable* vtbl, const QTableView* self, QPoint* offset);
	QPainter* (*sharedPainter)(struct QTableView_VTable* vtbl, const QTableView* self);
	void (*childEvent)(struct QTableView_VTable* vtbl, QTableView* self, QChildEvent* event);
	void (*customEvent)(struct QTableView_VTable* vtbl, QTableView* self, QEvent* event);
	void (*connectNotify)(struct QTableView_VTable* vtbl, QTableView* self, QMetaMethod* signal);
	void (*disconnectNotify)(struct QTableView_VTable* vtbl, QTableView* self, QMetaMethod* signal);
};
QTableView* QTableView_new(struct QTableView_VTable* vtbl, QWidget* parent);
QTableView* QTableView_new2(struct QTableView_VTable* vtbl);
void QTableView_virtbase(QTableView* src, QAbstractItemView** outptr_QAbstractItemView);
QMetaObject* QTableView_metaObject(const QTableView* self);
void* QTableView_metacast(QTableView* self, const char* param1);
int QTableView_metacall(QTableView* self, int param1, int param2, void** param3);
struct miqt_string QTableView_tr(const char* s);
void QTableView_setModel(QTableView* self, QAbstractItemModel* model);
void QTableView_setRootIndex(QTableView* self, QModelIndex* index);
void QTableView_setSelectionModel(QTableView* self, QItemSelectionModel* selectionModel);
void QTableView_doItemsLayout(QTableView* self);
QHeaderView* QTableView_horizontalHeader(const QTableView* self);
QHeaderView* QTableView_verticalHeader(const QTableView* self);
void QTableView_setHorizontalHeader(QTableView* self, QHeaderView* header);
void QTableView_setVerticalHeader(QTableView* self, QHeaderView* header);
int QTableView_rowViewportPosition(const QTableView* self, int row);
int QTableView_rowAt(const QTableView* self, int y);
void QTableView_setRowHeight(QTableView* self, int row, int height);
int QTableView_rowHeight(const QTableView* self, int row);
int QTableView_columnViewportPosition(const QTableView* self, int column);
int QTableView_columnAt(const QTableView* self, int x);
void QTableView_setColumnWidth(QTableView* self, int column, int width);
int QTableView_columnWidth(const QTableView* self, int column);
bool QTableView_isRowHidden(const QTableView* self, int row);
void QTableView_setRowHidden(QTableView* self, int row, bool hide);
bool QTableView_isColumnHidden(const QTableView* self, int column);
void QTableView_setColumnHidden(QTableView* self, int column, bool hide);
void QTableView_setSortingEnabled(QTableView* self, bool enable);
bool QTableView_isSortingEnabled(const QTableView* self);
bool QTableView_showGrid(const QTableView* self);
int QTableView_gridStyle(const QTableView* self);
void QTableView_setGridStyle(QTableView* self, int style);
void QTableView_setWordWrap(QTableView* self, bool on);
bool QTableView_wordWrap(const QTableView* self);
void QTableView_setCornerButtonEnabled(QTableView* self, bool enable);
bool QTableView_isCornerButtonEnabled(const QTableView* self);
QRect* QTableView_visualRect(const QTableView* self, QModelIndex* index);
void QTableView_scrollTo(QTableView* self, QModelIndex* index, int hint);
QModelIndex* QTableView_indexAt(const QTableView* self, QPoint* p);
void QTableView_setSpan(QTableView* self, int row, int column, int rowSpan, int columnSpan);
int QTableView_rowSpan(const QTableView* self, int row, int column);
int QTableView_columnSpan(const QTableView* self, int row, int column);
void QTableView_clearSpans(QTableView* self);
void QTableView_selectRow(QTableView* self, int row);
void QTableView_selectColumn(QTableView* self, int column);
void QTableView_hideRow(QTableView* self, int row);
void QTableView_hideColumn(QTableView* self, int column);
void QTableView_showRow(QTableView* self, int row);
void QTableView_showColumn(QTableView* self, int column);
void QTableView_resizeRowToContents(QTableView* self, int row);
void QTableView_resizeRowsToContents(QTableView* self);
void QTableView_resizeColumnToContents(QTableView* self, int column);
void QTableView_resizeColumnsToContents(QTableView* self);
void QTableView_sortByColumn(QTableView* self, int column, int order);
void QTableView_setShowGrid(QTableView* self, bool show);
void QTableView_scrollContentsBy(QTableView* self, int dx, int dy);
void QTableView_initViewItemOption(const QTableView* self, QStyleOptionViewItem* option);
void QTableView_paintEvent(QTableView* self, QPaintEvent* e);
void QTableView_timerEvent(QTableView* self, QTimerEvent* event);
int QTableView_horizontalOffset(const QTableView* self);
int QTableView_verticalOffset(const QTableView* self);
QModelIndex* QTableView_moveCursor(QTableView* self, int cursorAction, int modifiers);
void QTableView_setSelection(QTableView* self, QRect* rect, int command);
QRegion* QTableView_visualRegionForSelection(const QTableView* self, QItemSelection* selection);
struct miqt_array /* of QModelIndex* */  QTableView_selectedIndexes(const QTableView* self);
void QTableView_updateGeometries(QTableView* self);
QSize* QTableView_viewportSizeHint(const QTableView* self);
int QTableView_sizeHintForRow(const QTableView* self, int row);
int QTableView_sizeHintForColumn(const QTableView* self, int column);
void QTableView_verticalScrollbarAction(QTableView* self, int action);
void QTableView_horizontalScrollbarAction(QTableView* self, int action);
bool QTableView_isIndexHidden(const QTableView* self, QModelIndex* index);
void QTableView_selectionChanged(QTableView* self, QItemSelection* selected, QItemSelection* deselected);
void QTableView_currentChanged(QTableView* self, QModelIndex* current, QModelIndex* previous);
struct miqt_string QTableView_tr2(const char* s, const char* c);
struct miqt_string QTableView_tr3(const char* s, const char* c, int n);
QMetaObject* QTableView_virtualbase_metaObject(const void* self);
void* QTableView_virtualbase_metacast(void* self, const char* param1);
int QTableView_virtualbase_metacall(void* self, int param1, int param2, void** param3);
void QTableView_virtualbase_setModel(void* self, QAbstractItemModel* model);
void QTableView_virtualbase_setRootIndex(void* self, QModelIndex* index);
void QTableView_virtualbase_setSelectionModel(void* self, QItemSelectionModel* selectionModel);
void QTableView_virtualbase_doItemsLayout(void* self);
QRect* QTableView_virtualbase_visualRect(const void* self, QModelIndex* index);
void QTableView_virtualbase_scrollTo(void* self, QModelIndex* index, int hint);
QModelIndex* QTableView_virtualbase_indexAt(const void* self, QPoint* p);
void QTableView_virtualbase_scrollContentsBy(void* self, int dx, int dy);
void QTableView_virtualbase_initViewItemOption(const void* self, QStyleOptionViewItem* option);
void QTableView_virtualbase_paintEvent(void* self, QPaintEvent* e);
void QTableView_virtualbase_timerEvent(void* self, QTimerEvent* event);
int QTableView_virtualbase_horizontalOffset(const void* self);
int QTableView_virtualbase_verticalOffset(const void* self);
QModelIndex* QTableView_virtualbase_moveCursor(void* self, int cursorAction, int modifiers);
void QTableView_virtualbase_setSelection(void* self, QRect* rect, int command);
QRegion* QTableView_virtualbase_visualRegionForSelection(const void* self, QItemSelection* selection);
struct miqt_array /* of QModelIndex* */  QTableView_virtualbase_selectedIndexes(const void* self);
void QTableView_virtualbase_updateGeometries(void* self);
QSize* QTableView_virtualbase_viewportSizeHint(const void* self);
int QTableView_virtualbase_sizeHintForRow(const void* self, int row);
int QTableView_virtualbase_sizeHintForColumn(const void* self, int column);
void QTableView_virtualbase_verticalScrollbarAction(void* self, int action);
void QTableView_virtualbase_horizontalScrollbarAction(void* self, int action);
bool QTableView_virtualbase_isIndexHidden(const void* self, QModelIndex* index);
void QTableView_virtualbase_selectionChanged(void* self, QItemSelection* selected, QItemSelection* deselected);
void QTableView_virtualbase_currentChanged(void* self, QModelIndex* current, QModelIndex* previous);
void QTableView_virtualbase_keyboardSearch(void* self, struct miqt_string search);
QAbstractItemDelegate* QTableView_virtualbase_itemDelegateForIndex(const void* self, QModelIndex* index);
QVariant* QTableView_virtualbase_inputMethodQuery(const void* self, int query);
void QTableView_virtualbase_reset(void* self);
void QTableView_virtualbase_selectAll(void* self);
void QTableView_virtualbase_dataChanged(void* self, QModelIndex* topLeft, QModelIndex* bottomRight, struct miqt_array /* of int */  roles);
void QTableView_virtualbase_rowsInserted(void* self, QModelIndex* parent, int start, int end);
void QTableView_virtualbase_rowsAboutToBeRemoved(void* self, QModelIndex* parent, int start, int end);
void QTableView_virtualbase_updateEditorData(void* self);
void QTableView_virtualbase_updateEditorGeometries(void* self);
void QTableView_virtualbase_verticalScrollbarValueChanged(void* self, int value);
void QTableView_virtualbase_horizontalScrollbarValueChanged(void* self, int value);
void QTableView_virtualbase_closeEditor(void* self, QWidget* editor, int hint);
void QTableView_virtualbase_commitData(void* self, QWidget* editor);
void QTableView_virtualbase_editorDestroyed(void* self, QObject* editor);
bool QTableView_virtualbase_edit2(void* self, QModelIndex* index, int trigger, QEvent* event);
int QTableView_virtualbase_selectionCommand(const void* self, QModelIndex* index, QEvent* event);
void QTableView_virtualbase_startDrag(void* self, int supportedActions);
bool QTableView_virtualbase_focusNextPrevChild(void* self, bool next);
bool QTableView_virtualbase_event(void* self, QEvent* event);
bool QTableView_virtualbase_viewportEvent(void* self, QEvent* event);
void QTableView_virtualbase_mousePressEvent(void* self, QMouseEvent* event);
void QTableView_virtualbase_mouseMoveEvent(void* self, QMouseEvent* event);
void QTableView_virtualbase_mouseReleaseEvent(void* self, QMouseEvent* event);
void QTableView_virtualbase_mouseDoubleClickEvent(void* self, QMouseEvent* event);
void QTableView_virtualbase_dragEnterEvent(void* self, QDragEnterEvent* event);
void QTableView_virtualbase_dragMoveEvent(void* self, QDragMoveEvent* event);
void QTableView_virtualbase_dragLeaveEvent(void* self, QDragLeaveEvent* event);
void QTableView_virtualbase_dropEvent(void* self, QDropEvent* event);
void QTableView_virtualbase_focusInEvent(void* self, QFocusEvent* event);
void QTableView_virtualbase_focusOutEvent(void* self, QFocusEvent* event);
void QTableView_virtualbase_keyPressEvent(void* self, QKeyEvent* event);
void QTableView_virtualbase_resizeEvent(void* self, QResizeEvent* event);
void QTableView_virtualbase_inputMethodEvent(void* self, QInputMethodEvent* event);
bool QTableView_virtualbase_eventFilter(void* self, QObject* object, QEvent* event);
QSize* QTableView_virtualbase_minimumSizeHint(const void* self);
QSize* QTableView_virtualbase_sizeHint(const void* self);
void QTableView_virtualbase_setupViewport(void* self, QWidget* viewport);
void QTableView_virtualbase_wheelEvent(void* self, QWheelEvent* param1);
void QTableView_virtualbase_contextMenuEvent(void* self, QContextMenuEvent* param1);
void QTableView_virtualbase_changeEvent(void* self, QEvent* param1);
void QTableView_virtualbase_initStyleOption(const void* self, QStyleOptionFrame* option);
int QTableView_virtualbase_devType(const void* self);
void QTableView_virtualbase_setVisible(void* self, bool visible);
int QTableView_virtualbase_heightForWidth(const void* self, int param1);
bool QTableView_virtualbase_hasHeightForWidth(const void* self);
QPaintEngine* QTableView_virtualbase_paintEngine(const void* self);
void QTableView_virtualbase_keyReleaseEvent(void* self, QKeyEvent* event);
void QTableView_virtualbase_enterEvent(void* self, QEnterEvent* event);
void QTableView_virtualbase_leaveEvent(void* self, QEvent* event);
void QTableView_virtualbase_moveEvent(void* self, QMoveEvent* event);
void QTableView_virtualbase_closeEvent(void* self, QCloseEvent* event);
void QTableView_virtualbase_tabletEvent(void* self, QTabletEvent* event);
void QTableView_virtualbase_actionEvent(void* self, QActionEvent* event);
void QTableView_virtualbase_showEvent(void* self, QShowEvent* event);
void QTableView_virtualbase_hideEvent(void* self, QHideEvent* event);
bool QTableView_virtualbase_nativeEvent(void* self, struct miqt_string eventType, void* message, intptr_t* result);
int QTableView_virtualbase_metric(const void* self, int param1);
void QTableView_virtualbase_initPainter(const void* self, QPainter* painter);
QPaintDevice* QTableView_virtualbase_redirected(const void* self, QPoint* offset);
QPainter* QTableView_virtualbase_sharedPainter(const void* self);
void QTableView_virtualbase_childEvent(void* self, QChildEvent* event);
void QTableView_virtualbase_customEvent(void* self, QEvent* event);
void QTableView_virtualbase_connectNotify(void* self, QMetaMethod* signal);
void QTableView_virtualbase_disconnectNotify(void* self, QMetaMethod* signal);
void QTableView_protectedbase_rowMoved(void* self, int row, int oldIndex, int newIndex);
void QTableView_protectedbase_columnMoved(void* self, int column, int oldIndex, int newIndex);
void QTableView_protectedbase_rowResized(void* self, int row, int oldHeight, int newHeight);
void QTableView_protectedbase_columnResized(void* self, int column, int oldWidth, int newWidth);
void QTableView_protectedbase_rowCountChanged(void* self, int oldCount, int newCount);
void QTableView_protectedbase_columnCountChanged(void* self, int oldCount, int newCount);
int QTableView_protectedbase_state(const void* self);
void QTableView_protectedbase_setState(void* self, int state);
void QTableView_protectedbase_scheduleDelayedItemsLayout(void* self);
void QTableView_protectedbase_executeDelayedItemsLayout(void* self);
void QTableView_protectedbase_setDirtyRegion(void* self, QRegion* region);
void QTableView_protectedbase_scrollDirtyRegion(void* self, int dx, int dy);
QPoint* QTableView_protectedbase_dirtyRegionOffset(const void* self);
void QTableView_protectedbase_startAutoScroll(void* self);
void QTableView_protectedbase_stopAutoScroll(void* self);
void QTableView_protectedbase_doAutoScroll(void* self);
int QTableView_protectedbase_dropIndicatorPosition(const void* self);
void QTableView_protectedbase_setViewportMargins(void* self, int left, int top, int right, int bottom);
QMargins* QTableView_protectedbase_viewportMargins(const void* self);
void QTableView_protectedbase_drawFrame(void* self, QPainter* param1);
void QTableView_protectedbase_updateMicroFocus(void* self);
void QTableView_protectedbase_create(void* self);
void QTableView_protectedbase_destroy(void* self);
bool QTableView_protectedbase_focusNextChild(void* self);
bool QTableView_protectedbase_focusPreviousChild(void* self);
QObject* QTableView_protectedbase_sender(const void* self);
int QTableView_protectedbase_senderSignalIndex(const void* self);
int QTableView_protectedbase_receivers(const void* self, const char* signal);
bool QTableView_protectedbase_isSignalConnected(const void* self, QMetaMethod* signal);
const QMetaObject* QTableView_staticMetaObject();
void QTableView_delete(QTableView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
