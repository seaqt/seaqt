#pragma once
#ifndef SEAQT_QTWIDGETS_GEN_QDATETIMEEDIT_H
#define SEAQT_QTWIDGETS_GEN_QDATETIMEEDIT_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../libseaqt/libseaqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAbstractSpinBox;
class QActionEvent;
class QCalendar;
class QCalendarWidget;
class QChildEvent;
class QCloseEvent;
class QContextMenuEvent;
class QDate;
class QDateEdit;
class QDateTime;
class QDateTimeEdit;
class QDragEnterEvent;
class QDragLeaveEvent;
class QDragMoveEvent;
class QDropEvent;
class QEnterEvent;
class QEvent;
class QFocusEvent;
class QHideEvent;
class QInputMethodEvent;
class QKeyEvent;
class QLineEdit;
class QMetaMethod;
class QMetaObject;
class QMouseEvent;
class QMoveEvent;
class QObject;
class QPaintDevice;
class QPaintEngine;
class QPaintEvent;
class QPainter;
class QPoint;
class QResizeEvent;
class QShowEvent;
class QSize;
class QStyleOptionSpinBox;
class QTabletEvent;
class QTime;
class QTimeEdit;
class QTimerEvent;
class QVariant;
class QWheelEvent;
class QWidget;
#else
typedef struct QAbstractSpinBox QAbstractSpinBox;
typedef struct QActionEvent QActionEvent;
typedef struct QCalendar QCalendar;
typedef struct QCalendarWidget QCalendarWidget;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDate QDate;
typedef struct QDateEdit QDateEdit;
typedef struct QDateTime QDateTime;
typedef struct QDateTimeEdit QDateTimeEdit;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QLineEdit QLineEdit;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionSpinBox QStyleOptionSpinBox;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTime QTime;
typedef struct QTimeEdit QTimeEdit;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

struct QDateTimeEdit_VTable {
	void (*destructor)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self);
	QMetaObject* (*metaObject)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self);
	void* (*metacast)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, const char* param1);
	int (*metacall)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, int param1, int param2, void** param3);
	QSize* (*sizeHint)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self);
	void (*clear)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self);
	void (*stepBy)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, int steps);
	bool (*event)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QEvent* event);
	void (*keyPressEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QKeyEvent* event);
	void (*wheelEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QWheelEvent* event);
	void (*focusInEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QFocusEvent* event);
	bool (*focusNextPrevChild)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, bool next);
	int (*validate)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, struct miqt_string input, int* pos);
	void (*fixup)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, struct miqt_string input);
	QDateTime* (*dateTimeFromText)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, struct miqt_string text);
	struct miqt_string (*textFromDateTime)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, QDateTime* dt);
	int (*stepEnabled)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self);
	void (*mousePressEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QMouseEvent* event);
	void (*paintEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QPaintEvent* event);
	void (*initStyleOption)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, QStyleOptionSpinBox* option);
	QSize* (*minimumSizeHint)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self);
	QVariant* (*inputMethodQuery)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, int param1);
	void (*resizeEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QResizeEvent* event);
	void (*keyReleaseEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QKeyEvent* event);
	void (*focusOutEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QFocusEvent* event);
	void (*contextMenuEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QContextMenuEvent* event);
	void (*changeEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QEvent* event);
	void (*closeEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QCloseEvent* event);
	void (*hideEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QHideEvent* event);
	void (*mouseReleaseEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QMouseEvent* event);
	void (*mouseMoveEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QMouseEvent* event);
	void (*timerEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QTimerEvent* event);
	void (*showEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QShowEvent* event);
	int (*devType)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self);
	void (*setVisible)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, bool visible);
	int (*heightForWidth)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, int param1);
	bool (*hasHeightForWidth)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self);
	QPaintEngine* (*paintEngine)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self);
	void (*mouseDoubleClickEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QMouseEvent* event);
	void (*enterEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QEnterEvent* event);
	void (*leaveEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QEvent* event);
	void (*moveEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QMoveEvent* event);
	void (*tabletEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QTabletEvent* event);
	void (*actionEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QActionEvent* event);
	void (*dragEnterEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QDragEnterEvent* event);
	void (*dragMoveEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QDragMoveEvent* event);
	void (*dragLeaveEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QDragLeaveEvent* event);
	void (*dropEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QDropEvent* event);
	bool (*nativeEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, struct miqt_string eventType, void* message, intptr_t* result);
	int (*metric)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, int param1);
	void (*initPainter)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, QPainter* painter);
	QPaintDevice* (*redirected)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self, QPoint* offset);
	QPainter* (*sharedPainter)(struct QDateTimeEdit_VTable* vtbl, const QDateTimeEdit* self);
	void (*inputMethodEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QInputMethodEvent* param1);
	bool (*eventFilter)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QObject* watched, QEvent* event);
	void (*childEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QChildEvent* event);
	void (*customEvent)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QEvent* event);
	void (*connectNotify)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QMetaMethod* signal);
	void (*disconnectNotify)(struct QDateTimeEdit_VTable* vtbl, QDateTimeEdit* self, QMetaMethod* signal);
};
QDateTimeEdit* QDateTimeEdit_new(struct QDateTimeEdit_VTable* vtbl, QWidget* parent);
QDateTimeEdit* QDateTimeEdit_new2(struct QDateTimeEdit_VTable* vtbl);
QDateTimeEdit* QDateTimeEdit_new3(struct QDateTimeEdit_VTable* vtbl, QDateTime* dt);
QDateTimeEdit* QDateTimeEdit_new4(struct QDateTimeEdit_VTable* vtbl, QDate* d);
QDateTimeEdit* QDateTimeEdit_new5(struct QDateTimeEdit_VTable* vtbl, QTime* t);
QDateTimeEdit* QDateTimeEdit_new6(struct QDateTimeEdit_VTable* vtbl, QDateTime* dt, QWidget* parent);
QDateTimeEdit* QDateTimeEdit_new7(struct QDateTimeEdit_VTable* vtbl, QDate* d, QWidget* parent);
QDateTimeEdit* QDateTimeEdit_new8(struct QDateTimeEdit_VTable* vtbl, QTime* t, QWidget* parent);
void QDateTimeEdit_virtbase(QDateTimeEdit* src, QAbstractSpinBox** outptr_QAbstractSpinBox);
QMetaObject* QDateTimeEdit_metaObject(const QDateTimeEdit* self);
void* QDateTimeEdit_metacast(QDateTimeEdit* self, const char* param1);
int QDateTimeEdit_metacall(QDateTimeEdit* self, int param1, int param2, void** param3);
struct miqt_string QDateTimeEdit_tr(const char* s);
QDateTime* QDateTimeEdit_dateTime(const QDateTimeEdit* self);
QDate* QDateTimeEdit_date(const QDateTimeEdit* self);
QTime* QDateTimeEdit_time(const QDateTimeEdit* self);
QCalendar* QDateTimeEdit_calendar(const QDateTimeEdit* self);
void QDateTimeEdit_setCalendar(QDateTimeEdit* self, QCalendar* calendar);
QDateTime* QDateTimeEdit_minimumDateTime(const QDateTimeEdit* self);
void QDateTimeEdit_clearMinimumDateTime(QDateTimeEdit* self);
void QDateTimeEdit_setMinimumDateTime(QDateTimeEdit* self, QDateTime* dt);
QDateTime* QDateTimeEdit_maximumDateTime(const QDateTimeEdit* self);
void QDateTimeEdit_clearMaximumDateTime(QDateTimeEdit* self);
void QDateTimeEdit_setMaximumDateTime(QDateTimeEdit* self, QDateTime* dt);
void QDateTimeEdit_setDateTimeRange(QDateTimeEdit* self, QDateTime* min, QDateTime* max);
QDate* QDateTimeEdit_minimumDate(const QDateTimeEdit* self);
void QDateTimeEdit_setMinimumDate(QDateTimeEdit* self, QDate* min);
void QDateTimeEdit_clearMinimumDate(QDateTimeEdit* self);
QDate* QDateTimeEdit_maximumDate(const QDateTimeEdit* self);
void QDateTimeEdit_setMaximumDate(QDateTimeEdit* self, QDate* max);
void QDateTimeEdit_clearMaximumDate(QDateTimeEdit* self);
void QDateTimeEdit_setDateRange(QDateTimeEdit* self, QDate* min, QDate* max);
QTime* QDateTimeEdit_minimumTime(const QDateTimeEdit* self);
void QDateTimeEdit_setMinimumTime(QDateTimeEdit* self, QTime* min);
void QDateTimeEdit_clearMinimumTime(QDateTimeEdit* self);
QTime* QDateTimeEdit_maximumTime(const QDateTimeEdit* self);
void QDateTimeEdit_setMaximumTime(QDateTimeEdit* self, QTime* max);
void QDateTimeEdit_clearMaximumTime(QDateTimeEdit* self);
void QDateTimeEdit_setTimeRange(QDateTimeEdit* self, QTime* min, QTime* max);
int QDateTimeEdit_displayedSections(const QDateTimeEdit* self);
int QDateTimeEdit_currentSection(const QDateTimeEdit* self);
int QDateTimeEdit_sectionAt(const QDateTimeEdit* self, int index);
void QDateTimeEdit_setCurrentSection(QDateTimeEdit* self, int section);
int QDateTimeEdit_currentSectionIndex(const QDateTimeEdit* self);
void QDateTimeEdit_setCurrentSectionIndex(QDateTimeEdit* self, int index);
QCalendarWidget* QDateTimeEdit_calendarWidget(const QDateTimeEdit* self);
void QDateTimeEdit_setCalendarWidget(QDateTimeEdit* self, QCalendarWidget* calendarWidget);
int QDateTimeEdit_sectionCount(const QDateTimeEdit* self);
void QDateTimeEdit_setSelectedSection(QDateTimeEdit* self, int section);
struct miqt_string QDateTimeEdit_sectionText(const QDateTimeEdit* self, int section);
struct miqt_string QDateTimeEdit_displayFormat(const QDateTimeEdit* self);
void QDateTimeEdit_setDisplayFormat(QDateTimeEdit* self, struct miqt_string format);
bool QDateTimeEdit_calendarPopup(const QDateTimeEdit* self);
void QDateTimeEdit_setCalendarPopup(QDateTimeEdit* self, bool enable);
int QDateTimeEdit_timeSpec(const QDateTimeEdit* self);
void QDateTimeEdit_setTimeSpec(QDateTimeEdit* self, int spec);
QSize* QDateTimeEdit_sizeHint(const QDateTimeEdit* self);
void QDateTimeEdit_clear(QDateTimeEdit* self);
void QDateTimeEdit_stepBy(QDateTimeEdit* self, int steps);
bool QDateTimeEdit_event(QDateTimeEdit* self, QEvent* event);
void QDateTimeEdit_dateTimeChanged(QDateTimeEdit* self, QDateTime* dateTime);
void QDateTimeEdit_connect_dateTimeChanged(QDateTimeEdit* self, intptr_t slot);
void QDateTimeEdit_timeChanged(QDateTimeEdit* self, QTime* time);
void QDateTimeEdit_connect_timeChanged(QDateTimeEdit* self, intptr_t slot);
void QDateTimeEdit_dateChanged(QDateTimeEdit* self, QDate* date);
void QDateTimeEdit_connect_dateChanged(QDateTimeEdit* self, intptr_t slot);
void QDateTimeEdit_setDateTime(QDateTimeEdit* self, QDateTime* dateTime);
void QDateTimeEdit_setDate(QDateTimeEdit* self, QDate* date);
void QDateTimeEdit_setTime(QDateTimeEdit* self, QTime* time);
void QDateTimeEdit_keyPressEvent(QDateTimeEdit* self, QKeyEvent* event);
void QDateTimeEdit_wheelEvent(QDateTimeEdit* self, QWheelEvent* event);
void QDateTimeEdit_focusInEvent(QDateTimeEdit* self, QFocusEvent* event);
bool QDateTimeEdit_focusNextPrevChild(QDateTimeEdit* self, bool next);
int QDateTimeEdit_validate(const QDateTimeEdit* self, struct miqt_string input, int* pos);
void QDateTimeEdit_fixup(const QDateTimeEdit* self, struct miqt_string input);
QDateTime* QDateTimeEdit_dateTimeFromText(const QDateTimeEdit* self, struct miqt_string text);
struct miqt_string QDateTimeEdit_textFromDateTime(const QDateTimeEdit* self, QDateTime* dt);
int QDateTimeEdit_stepEnabled(const QDateTimeEdit* self);
void QDateTimeEdit_mousePressEvent(QDateTimeEdit* self, QMouseEvent* event);
void QDateTimeEdit_paintEvent(QDateTimeEdit* self, QPaintEvent* event);
void QDateTimeEdit_initStyleOption(const QDateTimeEdit* self, QStyleOptionSpinBox* option);
struct miqt_string QDateTimeEdit_tr2(const char* s, const char* c);
struct miqt_string QDateTimeEdit_tr3(const char* s, const char* c, int n);
QMetaObject* QDateTimeEdit_virtualbase_metaObject(const void* self);
void* QDateTimeEdit_virtualbase_metacast(void* self, const char* param1);
int QDateTimeEdit_virtualbase_metacall(void* self, int param1, int param2, void** param3);
QSize* QDateTimeEdit_virtualbase_sizeHint(const void* self);
void QDateTimeEdit_virtualbase_clear(void* self);
void QDateTimeEdit_virtualbase_stepBy(void* self, int steps);
bool QDateTimeEdit_virtualbase_event(void* self, QEvent* event);
void QDateTimeEdit_virtualbase_keyPressEvent(void* self, QKeyEvent* event);
void QDateTimeEdit_virtualbase_wheelEvent(void* self, QWheelEvent* event);
void QDateTimeEdit_virtualbase_focusInEvent(void* self, QFocusEvent* event);
bool QDateTimeEdit_virtualbase_focusNextPrevChild(void* self, bool next);
int QDateTimeEdit_virtualbase_validate(const void* self, struct miqt_string input, int* pos);
void QDateTimeEdit_virtualbase_fixup(const void* self, struct miqt_string input);
QDateTime* QDateTimeEdit_virtualbase_dateTimeFromText(const void* self, struct miqt_string text);
struct miqt_string QDateTimeEdit_virtualbase_textFromDateTime(const void* self, QDateTime* dt);
int QDateTimeEdit_virtualbase_stepEnabled(const void* self);
void QDateTimeEdit_virtualbase_mousePressEvent(void* self, QMouseEvent* event);
void QDateTimeEdit_virtualbase_paintEvent(void* self, QPaintEvent* event);
void QDateTimeEdit_virtualbase_initStyleOption(const void* self, QStyleOptionSpinBox* option);
QSize* QDateTimeEdit_virtualbase_minimumSizeHint(const void* self);
QVariant* QDateTimeEdit_virtualbase_inputMethodQuery(const void* self, int param1);
void QDateTimeEdit_virtualbase_resizeEvent(void* self, QResizeEvent* event);
void QDateTimeEdit_virtualbase_keyReleaseEvent(void* self, QKeyEvent* event);
void QDateTimeEdit_virtualbase_focusOutEvent(void* self, QFocusEvent* event);
void QDateTimeEdit_virtualbase_contextMenuEvent(void* self, QContextMenuEvent* event);
void QDateTimeEdit_virtualbase_changeEvent(void* self, QEvent* event);
void QDateTimeEdit_virtualbase_closeEvent(void* self, QCloseEvent* event);
void QDateTimeEdit_virtualbase_hideEvent(void* self, QHideEvent* event);
void QDateTimeEdit_virtualbase_mouseReleaseEvent(void* self, QMouseEvent* event);
void QDateTimeEdit_virtualbase_mouseMoveEvent(void* self, QMouseEvent* event);
void QDateTimeEdit_virtualbase_timerEvent(void* self, QTimerEvent* event);
void QDateTimeEdit_virtualbase_showEvent(void* self, QShowEvent* event);
int QDateTimeEdit_virtualbase_devType(const void* self);
void QDateTimeEdit_virtualbase_setVisible(void* self, bool visible);
int QDateTimeEdit_virtualbase_heightForWidth(const void* self, int param1);
bool QDateTimeEdit_virtualbase_hasHeightForWidth(const void* self);
QPaintEngine* QDateTimeEdit_virtualbase_paintEngine(const void* self);
void QDateTimeEdit_virtualbase_mouseDoubleClickEvent(void* self, QMouseEvent* event);
void QDateTimeEdit_virtualbase_enterEvent(void* self, QEnterEvent* event);
void QDateTimeEdit_virtualbase_leaveEvent(void* self, QEvent* event);
void QDateTimeEdit_virtualbase_moveEvent(void* self, QMoveEvent* event);
void QDateTimeEdit_virtualbase_tabletEvent(void* self, QTabletEvent* event);
void QDateTimeEdit_virtualbase_actionEvent(void* self, QActionEvent* event);
void QDateTimeEdit_virtualbase_dragEnterEvent(void* self, QDragEnterEvent* event);
void QDateTimeEdit_virtualbase_dragMoveEvent(void* self, QDragMoveEvent* event);
void QDateTimeEdit_virtualbase_dragLeaveEvent(void* self, QDragLeaveEvent* event);
void QDateTimeEdit_virtualbase_dropEvent(void* self, QDropEvent* event);
bool QDateTimeEdit_virtualbase_nativeEvent(void* self, struct miqt_string eventType, void* message, intptr_t* result);
int QDateTimeEdit_virtualbase_metric(const void* self, int param1);
void QDateTimeEdit_virtualbase_initPainter(const void* self, QPainter* painter);
QPaintDevice* QDateTimeEdit_virtualbase_redirected(const void* self, QPoint* offset);
QPainter* QDateTimeEdit_virtualbase_sharedPainter(const void* self);
void QDateTimeEdit_virtualbase_inputMethodEvent(void* self, QInputMethodEvent* param1);
bool QDateTimeEdit_virtualbase_eventFilter(void* self, QObject* watched, QEvent* event);
void QDateTimeEdit_virtualbase_childEvent(void* self, QChildEvent* event);
void QDateTimeEdit_virtualbase_customEvent(void* self, QEvent* event);
void QDateTimeEdit_virtualbase_connectNotify(void* self, QMetaMethod* signal);
void QDateTimeEdit_virtualbase_disconnectNotify(void* self, QMetaMethod* signal);
QLineEdit* QDateTimeEdit_protectedbase_lineEdit(bool* _dynamic_cast_ok, const void* self);
void QDateTimeEdit_protectedbase_setLineEdit(bool* _dynamic_cast_ok, void* self, QLineEdit* edit);
void QDateTimeEdit_protectedbase_updateMicroFocus(bool* _dynamic_cast_ok, void* self);
void QDateTimeEdit_protectedbase_create(bool* _dynamic_cast_ok, void* self);
void QDateTimeEdit_protectedbase_destroy(bool* _dynamic_cast_ok, void* self);
bool QDateTimeEdit_protectedbase_focusNextChild(bool* _dynamic_cast_ok, void* self);
bool QDateTimeEdit_protectedbase_focusPreviousChild(bool* _dynamic_cast_ok, void* self);
QObject* QDateTimeEdit_protectedbase_sender(bool* _dynamic_cast_ok, const void* self);
int QDateTimeEdit_protectedbase_senderSignalIndex(bool* _dynamic_cast_ok, const void* self);
int QDateTimeEdit_protectedbase_receivers(bool* _dynamic_cast_ok, const void* self, const char* signal);
bool QDateTimeEdit_protectedbase_isSignalConnected(bool* _dynamic_cast_ok, const void* self, QMetaMethod* signal);
const QMetaObject* QDateTimeEdit_staticMetaObject();
void QDateTimeEdit_delete(QDateTimeEdit* self);

struct QTimeEdit_VTable {
	void (*destructor)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self);
	QMetaObject* (*metaObject)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self);
	void* (*metacast)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, const char* param1);
	int (*metacall)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, int param1, int param2, void** param3);
	QSize* (*sizeHint)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self);
	void (*clear)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self);
	void (*stepBy)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, int steps);
	bool (*event)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QEvent* event);
	void (*keyPressEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QKeyEvent* event);
	void (*wheelEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QWheelEvent* event);
	void (*focusInEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QFocusEvent* event);
	bool (*focusNextPrevChild)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, bool next);
	int (*validate)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, struct miqt_string input, int* pos);
	void (*fixup)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, struct miqt_string input);
	QDateTime* (*dateTimeFromText)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, struct miqt_string text);
	struct miqt_string (*textFromDateTime)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, QDateTime* dt);
	int (*stepEnabled)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self);
	void (*mousePressEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QMouseEvent* event);
	void (*paintEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QPaintEvent* event);
	void (*initStyleOption)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, QStyleOptionSpinBox* option);
	QSize* (*minimumSizeHint)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self);
	QVariant* (*inputMethodQuery)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, int param1);
	void (*resizeEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QResizeEvent* event);
	void (*keyReleaseEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QKeyEvent* event);
	void (*focusOutEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QFocusEvent* event);
	void (*contextMenuEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QContextMenuEvent* event);
	void (*changeEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QEvent* event);
	void (*closeEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QCloseEvent* event);
	void (*hideEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QHideEvent* event);
	void (*mouseReleaseEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QMouseEvent* event);
	void (*mouseMoveEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QMouseEvent* event);
	void (*timerEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QTimerEvent* event);
	void (*showEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QShowEvent* event);
	int (*devType)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self);
	void (*setVisible)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, bool visible);
	int (*heightForWidth)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, int param1);
	bool (*hasHeightForWidth)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self);
	QPaintEngine* (*paintEngine)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self);
	void (*mouseDoubleClickEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QMouseEvent* event);
	void (*enterEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QEnterEvent* event);
	void (*leaveEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QEvent* event);
	void (*moveEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QMoveEvent* event);
	void (*tabletEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QTabletEvent* event);
	void (*actionEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QActionEvent* event);
	void (*dragEnterEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QDragEnterEvent* event);
	void (*dragMoveEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QDragMoveEvent* event);
	void (*dragLeaveEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QDragLeaveEvent* event);
	void (*dropEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QDropEvent* event);
	bool (*nativeEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, struct miqt_string eventType, void* message, intptr_t* result);
	int (*metric)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, int param1);
	void (*initPainter)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, QPainter* painter);
	QPaintDevice* (*redirected)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self, QPoint* offset);
	QPainter* (*sharedPainter)(struct QTimeEdit_VTable* vtbl, const QTimeEdit* self);
	void (*inputMethodEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QInputMethodEvent* param1);
	bool (*eventFilter)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QObject* watched, QEvent* event);
	void (*childEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QChildEvent* event);
	void (*customEvent)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QEvent* event);
	void (*connectNotify)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QMetaMethod* signal);
	void (*disconnectNotify)(struct QTimeEdit_VTable* vtbl, QTimeEdit* self, QMetaMethod* signal);
};
QTimeEdit* QTimeEdit_new(struct QTimeEdit_VTable* vtbl, QWidget* parent);
QTimeEdit* QTimeEdit_new2(struct QTimeEdit_VTable* vtbl);
QTimeEdit* QTimeEdit_new3(struct QTimeEdit_VTable* vtbl, QTime* time);
QTimeEdit* QTimeEdit_new4(struct QTimeEdit_VTable* vtbl, QTime* time, QWidget* parent);
void QTimeEdit_virtbase(QTimeEdit* src, QDateTimeEdit** outptr_QDateTimeEdit);
QMetaObject* QTimeEdit_metaObject(const QTimeEdit* self);
void* QTimeEdit_metacast(QTimeEdit* self, const char* param1);
int QTimeEdit_metacall(QTimeEdit* self, int param1, int param2, void** param3);
struct miqt_string QTimeEdit_tr(const char* s);
void QTimeEdit_userTimeChanged(QTimeEdit* self, QTime* time);
void QTimeEdit_connect_userTimeChanged(QTimeEdit* self, intptr_t slot);
struct miqt_string QTimeEdit_tr2(const char* s, const char* c);
struct miqt_string QTimeEdit_tr3(const char* s, const char* c, int n);
QMetaObject* QTimeEdit_virtualbase_metaObject(const void* self);
void* QTimeEdit_virtualbase_metacast(void* self, const char* param1);
int QTimeEdit_virtualbase_metacall(void* self, int param1, int param2, void** param3);
QSize* QTimeEdit_virtualbase_sizeHint(const void* self);
void QTimeEdit_virtualbase_clear(void* self);
void QTimeEdit_virtualbase_stepBy(void* self, int steps);
bool QTimeEdit_virtualbase_event(void* self, QEvent* event);
void QTimeEdit_virtualbase_keyPressEvent(void* self, QKeyEvent* event);
void QTimeEdit_virtualbase_wheelEvent(void* self, QWheelEvent* event);
void QTimeEdit_virtualbase_focusInEvent(void* self, QFocusEvent* event);
bool QTimeEdit_virtualbase_focusNextPrevChild(void* self, bool next);
int QTimeEdit_virtualbase_validate(const void* self, struct miqt_string input, int* pos);
void QTimeEdit_virtualbase_fixup(const void* self, struct miqt_string input);
QDateTime* QTimeEdit_virtualbase_dateTimeFromText(const void* self, struct miqt_string text);
struct miqt_string QTimeEdit_virtualbase_textFromDateTime(const void* self, QDateTime* dt);
int QTimeEdit_virtualbase_stepEnabled(const void* self);
void QTimeEdit_virtualbase_mousePressEvent(void* self, QMouseEvent* event);
void QTimeEdit_virtualbase_paintEvent(void* self, QPaintEvent* event);
void QTimeEdit_virtualbase_initStyleOption(const void* self, QStyleOptionSpinBox* option);
QSize* QTimeEdit_virtualbase_minimumSizeHint(const void* self);
QVariant* QTimeEdit_virtualbase_inputMethodQuery(const void* self, int param1);
void QTimeEdit_virtualbase_resizeEvent(void* self, QResizeEvent* event);
void QTimeEdit_virtualbase_keyReleaseEvent(void* self, QKeyEvent* event);
void QTimeEdit_virtualbase_focusOutEvent(void* self, QFocusEvent* event);
void QTimeEdit_virtualbase_contextMenuEvent(void* self, QContextMenuEvent* event);
void QTimeEdit_virtualbase_changeEvent(void* self, QEvent* event);
void QTimeEdit_virtualbase_closeEvent(void* self, QCloseEvent* event);
void QTimeEdit_virtualbase_hideEvent(void* self, QHideEvent* event);
void QTimeEdit_virtualbase_mouseReleaseEvent(void* self, QMouseEvent* event);
void QTimeEdit_virtualbase_mouseMoveEvent(void* self, QMouseEvent* event);
void QTimeEdit_virtualbase_timerEvent(void* self, QTimerEvent* event);
void QTimeEdit_virtualbase_showEvent(void* self, QShowEvent* event);
int QTimeEdit_virtualbase_devType(const void* self);
void QTimeEdit_virtualbase_setVisible(void* self, bool visible);
int QTimeEdit_virtualbase_heightForWidth(const void* self, int param1);
bool QTimeEdit_virtualbase_hasHeightForWidth(const void* self);
QPaintEngine* QTimeEdit_virtualbase_paintEngine(const void* self);
void QTimeEdit_virtualbase_mouseDoubleClickEvent(void* self, QMouseEvent* event);
void QTimeEdit_virtualbase_enterEvent(void* self, QEnterEvent* event);
void QTimeEdit_virtualbase_leaveEvent(void* self, QEvent* event);
void QTimeEdit_virtualbase_moveEvent(void* self, QMoveEvent* event);
void QTimeEdit_virtualbase_tabletEvent(void* self, QTabletEvent* event);
void QTimeEdit_virtualbase_actionEvent(void* self, QActionEvent* event);
void QTimeEdit_virtualbase_dragEnterEvent(void* self, QDragEnterEvent* event);
void QTimeEdit_virtualbase_dragMoveEvent(void* self, QDragMoveEvent* event);
void QTimeEdit_virtualbase_dragLeaveEvent(void* self, QDragLeaveEvent* event);
void QTimeEdit_virtualbase_dropEvent(void* self, QDropEvent* event);
bool QTimeEdit_virtualbase_nativeEvent(void* self, struct miqt_string eventType, void* message, intptr_t* result);
int QTimeEdit_virtualbase_metric(const void* self, int param1);
void QTimeEdit_virtualbase_initPainter(const void* self, QPainter* painter);
QPaintDevice* QTimeEdit_virtualbase_redirected(const void* self, QPoint* offset);
QPainter* QTimeEdit_virtualbase_sharedPainter(const void* self);
void QTimeEdit_virtualbase_inputMethodEvent(void* self, QInputMethodEvent* param1);
bool QTimeEdit_virtualbase_eventFilter(void* self, QObject* watched, QEvent* event);
void QTimeEdit_virtualbase_childEvent(void* self, QChildEvent* event);
void QTimeEdit_virtualbase_customEvent(void* self, QEvent* event);
void QTimeEdit_virtualbase_connectNotify(void* self, QMetaMethod* signal);
void QTimeEdit_virtualbase_disconnectNotify(void* self, QMetaMethod* signal);
QLineEdit* QTimeEdit_protectedbase_lineEdit(bool* _dynamic_cast_ok, const void* self);
void QTimeEdit_protectedbase_setLineEdit(bool* _dynamic_cast_ok, void* self, QLineEdit* edit);
void QTimeEdit_protectedbase_updateMicroFocus(bool* _dynamic_cast_ok, void* self);
void QTimeEdit_protectedbase_create(bool* _dynamic_cast_ok, void* self);
void QTimeEdit_protectedbase_destroy(bool* _dynamic_cast_ok, void* self);
bool QTimeEdit_protectedbase_focusNextChild(bool* _dynamic_cast_ok, void* self);
bool QTimeEdit_protectedbase_focusPreviousChild(bool* _dynamic_cast_ok, void* self);
QObject* QTimeEdit_protectedbase_sender(bool* _dynamic_cast_ok, const void* self);
int QTimeEdit_protectedbase_senderSignalIndex(bool* _dynamic_cast_ok, const void* self);
int QTimeEdit_protectedbase_receivers(bool* _dynamic_cast_ok, const void* self, const char* signal);
bool QTimeEdit_protectedbase_isSignalConnected(bool* _dynamic_cast_ok, const void* self, QMetaMethod* signal);
const QMetaObject* QTimeEdit_staticMetaObject();
void QTimeEdit_delete(QTimeEdit* self);

struct QDateEdit_VTable {
	void (*destructor)(struct QDateEdit_VTable* vtbl, QDateEdit* self);
	QMetaObject* (*metaObject)(struct QDateEdit_VTable* vtbl, const QDateEdit* self);
	void* (*metacast)(struct QDateEdit_VTable* vtbl, QDateEdit* self, const char* param1);
	int (*metacall)(struct QDateEdit_VTable* vtbl, QDateEdit* self, int param1, int param2, void** param3);
	QSize* (*sizeHint)(struct QDateEdit_VTable* vtbl, const QDateEdit* self);
	void (*clear)(struct QDateEdit_VTable* vtbl, QDateEdit* self);
	void (*stepBy)(struct QDateEdit_VTable* vtbl, QDateEdit* self, int steps);
	bool (*event)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QEvent* event);
	void (*keyPressEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QKeyEvent* event);
	void (*wheelEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QWheelEvent* event);
	void (*focusInEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QFocusEvent* event);
	bool (*focusNextPrevChild)(struct QDateEdit_VTable* vtbl, QDateEdit* self, bool next);
	int (*validate)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, struct miqt_string input, int* pos);
	void (*fixup)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, struct miqt_string input);
	QDateTime* (*dateTimeFromText)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, struct miqt_string text);
	struct miqt_string (*textFromDateTime)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, QDateTime* dt);
	int (*stepEnabled)(struct QDateEdit_VTable* vtbl, const QDateEdit* self);
	void (*mousePressEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QMouseEvent* event);
	void (*paintEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QPaintEvent* event);
	void (*initStyleOption)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, QStyleOptionSpinBox* option);
	QSize* (*minimumSizeHint)(struct QDateEdit_VTable* vtbl, const QDateEdit* self);
	QVariant* (*inputMethodQuery)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, int param1);
	void (*resizeEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QResizeEvent* event);
	void (*keyReleaseEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QKeyEvent* event);
	void (*focusOutEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QFocusEvent* event);
	void (*contextMenuEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QContextMenuEvent* event);
	void (*changeEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QEvent* event);
	void (*closeEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QCloseEvent* event);
	void (*hideEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QHideEvent* event);
	void (*mouseReleaseEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QMouseEvent* event);
	void (*mouseMoveEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QMouseEvent* event);
	void (*timerEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QTimerEvent* event);
	void (*showEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QShowEvent* event);
	int (*devType)(struct QDateEdit_VTable* vtbl, const QDateEdit* self);
	void (*setVisible)(struct QDateEdit_VTable* vtbl, QDateEdit* self, bool visible);
	int (*heightForWidth)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, int param1);
	bool (*hasHeightForWidth)(struct QDateEdit_VTable* vtbl, const QDateEdit* self);
	QPaintEngine* (*paintEngine)(struct QDateEdit_VTable* vtbl, const QDateEdit* self);
	void (*mouseDoubleClickEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QMouseEvent* event);
	void (*enterEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QEnterEvent* event);
	void (*leaveEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QEvent* event);
	void (*moveEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QMoveEvent* event);
	void (*tabletEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QTabletEvent* event);
	void (*actionEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QActionEvent* event);
	void (*dragEnterEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QDragEnterEvent* event);
	void (*dragMoveEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QDragMoveEvent* event);
	void (*dragLeaveEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QDragLeaveEvent* event);
	void (*dropEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QDropEvent* event);
	bool (*nativeEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, struct miqt_string eventType, void* message, intptr_t* result);
	int (*metric)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, int param1);
	void (*initPainter)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, QPainter* painter);
	QPaintDevice* (*redirected)(struct QDateEdit_VTable* vtbl, const QDateEdit* self, QPoint* offset);
	QPainter* (*sharedPainter)(struct QDateEdit_VTable* vtbl, const QDateEdit* self);
	void (*inputMethodEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QInputMethodEvent* param1);
	bool (*eventFilter)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QObject* watched, QEvent* event);
	void (*childEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QChildEvent* event);
	void (*customEvent)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QEvent* event);
	void (*connectNotify)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QMetaMethod* signal);
	void (*disconnectNotify)(struct QDateEdit_VTable* vtbl, QDateEdit* self, QMetaMethod* signal);
};
QDateEdit* QDateEdit_new(struct QDateEdit_VTable* vtbl, QWidget* parent);
QDateEdit* QDateEdit_new2(struct QDateEdit_VTable* vtbl);
QDateEdit* QDateEdit_new3(struct QDateEdit_VTable* vtbl, QDate* date);
QDateEdit* QDateEdit_new4(struct QDateEdit_VTable* vtbl, QDate* date, QWidget* parent);
void QDateEdit_virtbase(QDateEdit* src, QDateTimeEdit** outptr_QDateTimeEdit);
QMetaObject* QDateEdit_metaObject(const QDateEdit* self);
void* QDateEdit_metacast(QDateEdit* self, const char* param1);
int QDateEdit_metacall(QDateEdit* self, int param1, int param2, void** param3);
struct miqt_string QDateEdit_tr(const char* s);
void QDateEdit_userDateChanged(QDateEdit* self, QDate* date);
void QDateEdit_connect_userDateChanged(QDateEdit* self, intptr_t slot);
struct miqt_string QDateEdit_tr2(const char* s, const char* c);
struct miqt_string QDateEdit_tr3(const char* s, const char* c, int n);
QMetaObject* QDateEdit_virtualbase_metaObject(const void* self);
void* QDateEdit_virtualbase_metacast(void* self, const char* param1);
int QDateEdit_virtualbase_metacall(void* self, int param1, int param2, void** param3);
QSize* QDateEdit_virtualbase_sizeHint(const void* self);
void QDateEdit_virtualbase_clear(void* self);
void QDateEdit_virtualbase_stepBy(void* self, int steps);
bool QDateEdit_virtualbase_event(void* self, QEvent* event);
void QDateEdit_virtualbase_keyPressEvent(void* self, QKeyEvent* event);
void QDateEdit_virtualbase_wheelEvent(void* self, QWheelEvent* event);
void QDateEdit_virtualbase_focusInEvent(void* self, QFocusEvent* event);
bool QDateEdit_virtualbase_focusNextPrevChild(void* self, bool next);
int QDateEdit_virtualbase_validate(const void* self, struct miqt_string input, int* pos);
void QDateEdit_virtualbase_fixup(const void* self, struct miqt_string input);
QDateTime* QDateEdit_virtualbase_dateTimeFromText(const void* self, struct miqt_string text);
struct miqt_string QDateEdit_virtualbase_textFromDateTime(const void* self, QDateTime* dt);
int QDateEdit_virtualbase_stepEnabled(const void* self);
void QDateEdit_virtualbase_mousePressEvent(void* self, QMouseEvent* event);
void QDateEdit_virtualbase_paintEvent(void* self, QPaintEvent* event);
void QDateEdit_virtualbase_initStyleOption(const void* self, QStyleOptionSpinBox* option);
QSize* QDateEdit_virtualbase_minimumSizeHint(const void* self);
QVariant* QDateEdit_virtualbase_inputMethodQuery(const void* self, int param1);
void QDateEdit_virtualbase_resizeEvent(void* self, QResizeEvent* event);
void QDateEdit_virtualbase_keyReleaseEvent(void* self, QKeyEvent* event);
void QDateEdit_virtualbase_focusOutEvent(void* self, QFocusEvent* event);
void QDateEdit_virtualbase_contextMenuEvent(void* self, QContextMenuEvent* event);
void QDateEdit_virtualbase_changeEvent(void* self, QEvent* event);
void QDateEdit_virtualbase_closeEvent(void* self, QCloseEvent* event);
void QDateEdit_virtualbase_hideEvent(void* self, QHideEvent* event);
void QDateEdit_virtualbase_mouseReleaseEvent(void* self, QMouseEvent* event);
void QDateEdit_virtualbase_mouseMoveEvent(void* self, QMouseEvent* event);
void QDateEdit_virtualbase_timerEvent(void* self, QTimerEvent* event);
void QDateEdit_virtualbase_showEvent(void* self, QShowEvent* event);
int QDateEdit_virtualbase_devType(const void* self);
void QDateEdit_virtualbase_setVisible(void* self, bool visible);
int QDateEdit_virtualbase_heightForWidth(const void* self, int param1);
bool QDateEdit_virtualbase_hasHeightForWidth(const void* self);
QPaintEngine* QDateEdit_virtualbase_paintEngine(const void* self);
void QDateEdit_virtualbase_mouseDoubleClickEvent(void* self, QMouseEvent* event);
void QDateEdit_virtualbase_enterEvent(void* self, QEnterEvent* event);
void QDateEdit_virtualbase_leaveEvent(void* self, QEvent* event);
void QDateEdit_virtualbase_moveEvent(void* self, QMoveEvent* event);
void QDateEdit_virtualbase_tabletEvent(void* self, QTabletEvent* event);
void QDateEdit_virtualbase_actionEvent(void* self, QActionEvent* event);
void QDateEdit_virtualbase_dragEnterEvent(void* self, QDragEnterEvent* event);
void QDateEdit_virtualbase_dragMoveEvent(void* self, QDragMoveEvent* event);
void QDateEdit_virtualbase_dragLeaveEvent(void* self, QDragLeaveEvent* event);
void QDateEdit_virtualbase_dropEvent(void* self, QDropEvent* event);
bool QDateEdit_virtualbase_nativeEvent(void* self, struct miqt_string eventType, void* message, intptr_t* result);
int QDateEdit_virtualbase_metric(const void* self, int param1);
void QDateEdit_virtualbase_initPainter(const void* self, QPainter* painter);
QPaintDevice* QDateEdit_virtualbase_redirected(const void* self, QPoint* offset);
QPainter* QDateEdit_virtualbase_sharedPainter(const void* self);
void QDateEdit_virtualbase_inputMethodEvent(void* self, QInputMethodEvent* param1);
bool QDateEdit_virtualbase_eventFilter(void* self, QObject* watched, QEvent* event);
void QDateEdit_virtualbase_childEvent(void* self, QChildEvent* event);
void QDateEdit_virtualbase_customEvent(void* self, QEvent* event);
void QDateEdit_virtualbase_connectNotify(void* self, QMetaMethod* signal);
void QDateEdit_virtualbase_disconnectNotify(void* self, QMetaMethod* signal);
QLineEdit* QDateEdit_protectedbase_lineEdit(bool* _dynamic_cast_ok, const void* self);
void QDateEdit_protectedbase_setLineEdit(bool* _dynamic_cast_ok, void* self, QLineEdit* edit);
void QDateEdit_protectedbase_updateMicroFocus(bool* _dynamic_cast_ok, void* self);
void QDateEdit_protectedbase_create(bool* _dynamic_cast_ok, void* self);
void QDateEdit_protectedbase_destroy(bool* _dynamic_cast_ok, void* self);
bool QDateEdit_protectedbase_focusNextChild(bool* _dynamic_cast_ok, void* self);
bool QDateEdit_protectedbase_focusPreviousChild(bool* _dynamic_cast_ok, void* self);
QObject* QDateEdit_protectedbase_sender(bool* _dynamic_cast_ok, const void* self);
int QDateEdit_protectedbase_senderSignalIndex(bool* _dynamic_cast_ok, const void* self);
int QDateEdit_protectedbase_receivers(bool* _dynamic_cast_ok, const void* self, const char* signal);
bool QDateEdit_protectedbase_isSignalConnected(bool* _dynamic_cast_ok, const void* self, QMetaMethod* signal);
const QMetaObject* QDateEdit_staticMetaObject();
void QDateEdit_delete(QDateEdit* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
